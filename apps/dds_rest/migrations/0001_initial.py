# Generated by Django 2.2.1 on 2023-01-17 09:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DDSRestConfiguration',
            fields=[
                ('configuration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Configuration')),
                ('clock', models.FloatField(default=60, null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(75)], verbose_name='Clock In (MHz)')),
                ('multiplier', models.PositiveIntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Multiplier')),
                ('frequencyA_Mhz', models.DecimalField(decimal_places=16, default=49.92, max_digits=19, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)], verbose_name='Frequency A (MHz)')),
                ('frequencyA', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(281474976710655)], verbose_name='Frequency A (Decimal)')),
                ('frequencyB_Mhz', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)], verbose_name='Frequency B (MHz)')),
                ('frequencyB', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(281474976710655)], verbose_name='Frequency B (Decimal)')),
                ('delta_frequency_Mhz', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)], verbose_name='Delta frequency (MHz)')),
                ('delta_frequency', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(281474976710655)], verbose_name='Delta frequency (Decimal)')),
                ('update_clock_Mhz', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)], verbose_name='Update clock (MHz)')),
                ('update_clock', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)], verbose_name='Update clock (Decimal)')),
                ('ramp_rate_clock_Mhz', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)], verbose_name='Ramp rate clock (MHz)')),
                ('ramp_rate_clock', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(262143)], verbose_name='Ramp rate clock (Decimal)')),
                ('phaseA_degrees', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)], verbose_name='Phase A (Degrees)')),
                ('phaseB_degrees', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)], verbose_name='Phase B (Degrees)')),
                ('modulation', models.PositiveIntegerField(choices=[(0, 'Single Tone'), (1, 'FSK'), (2, 'Ramped FSK'), (3, 'Chirp'), (4, 'BPSK')], default=0, verbose_name='Modulation Type')),
                ('amplitude_enabled', models.BooleanField(choices=[(False, 'Disabled'), (True, 'Enabled')], default=False, verbose_name='Amplitude Control')),
                ('amplitudeI', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)], verbose_name='Amplitude CH1')),
                ('amplitudeQ', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)], verbose_name='Amplitude CH2')),
            ],
            options={
                'db_table': 'ddsrest_configurations',
            },
            bases=('main.configuration',),
        ),
    ]
